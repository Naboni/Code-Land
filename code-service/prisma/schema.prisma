generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}


// ===================================================== code_service
model Topic {
  id String @id @default(uuid())

  topic_name String
  topic_type String @unique

  solutions Solution[]
  question Question[]

  createdAt DateTime @default(now())
}

model Question {
  id String @id @default(uuid())

  question_title        String @unique
  question_prompt       String @db.VarChar(5000)
  question_difficulty   String
  sample_input          String
  sample_output         String
  optimal_complexity    String
  
  topic   Topic @relation(fields: [topicId], references: [id])
  topicId String

  favorites Favorite[]
  discussion Discussion[]
  solutions Solution[]

  createdAt DateTime @default(now())

  @@index([topicId])
}

model Discussion {
  id String @id @default(uuid())

  title       String
  description String @db.VarChar(5000)

  tag             String
  user_id         String
  seen_count      Int
  up_vote_count   Int
  down_vote_count Int
  
  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  comment Comment[]

  createdAt DateTime @default(now())

  @@index([questionId])
}

model Comment {
  id String @id @default(uuid())

  text  String @db.VarChar(5000)

  user_id      String
  user_name    String
  user_profile String
  
  discussion    Discussion @relation(fields: [discussionId], references: [id])
  discussionId  String

  createdAt DateTime @default(now())

  @@index([discussionId])
}

// ===================================================== code_service

// ===================================================== interaction_service
model Favorite {
  id String @id @default(uuid())

  userId String

  questions Question[]
}

model Solution {
  id String @id @default(uuid())

  solutionCode String
  isDone Boolean @default(false)

  userId String 
  
  question Question @relation(fields: [questionId], references: [id])
  questionId String

  topic Topic @relation(fields: [topicId], references: [id])
  topicId String

  @@index([topicId])
  @@index([questionId])
}

// ===================================================== interaction_service